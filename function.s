.macro calculate_pi(%zeta) #Макрос возвращает приближенное значения числа π
	fmul.d fa1 %zeta fs2
	fsqrt.d ft0 fa1  
.end_macro


.macro approximate_zeta(%s, %tolerance) #Макрос возвращает накопленную сумму, которая является приближенным значением дзета-функции Римана 
	li t2 0 	#Инициализируем t2 нулевым значением, которая будет использоваться для накопления суммы ряда.
	fcvt.d.w ft2 t2 	#Конвертировать t2 в double и сохранить в ft2
	li a2 1  	#Инициализируем a2 единицей, которая будет использоваться в качестве делителя в термах ряда.

count_degree:
 	mul a3, a2, a2
 	fcvt.d.w fa3 a3
	fdiv.d fa4 fs4 fa3
	fadd.d ft2 ft2 fa4
	#Если текущий терм меньше tolerance, то цикл прерывается. Это означает, что дальнейшее добавление термов к сумме не приведет 
	#к значительному увеличению точности, и дальнейшие вычисления могут быть прекращены.
	flt.d a5 fa4 %tolerance
	bnez a5 main
	add a2 a2 s4 	#увеличиваем счетчик-делитель
	j count_degree
.end_macro
